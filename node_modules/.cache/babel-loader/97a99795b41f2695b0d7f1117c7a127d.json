{"ast":null,"code":"var _jsxFileName = \"/Users/jake/Desktop/scalefinder-v3/src/components/FretStepper.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nfunction FretStepper(props) {\n  const {\n    numberOfFrets,\n    setFretCount\n  } = props;\n\n  const decrease = () => {\n    if (numberOfFrets !== 12) {\n      setFretCount(numberOfFrets - 1);\n    }\n  };\n\n  const increase = () => {\n    if (numberOfFrets !== 24) {\n      setFretCount(numberOfFrets + 1);\n    }\n  };\n\n  const min = n => {\n    return n === 12 ? \"limit\" : null;\n  };\n\n  const max = n => {\n    return n === 24 ? \"limit\" : null;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"stepper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    id: min(numberOfStrings),\n    onClick: decrease,\n    className: \"gray-round-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, \"-\"), /*#__PURE__*/React.createElement(\"span\", {\n    type: \"text\",\n    id: \"counter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, numberOfFrets.toString()), /*#__PURE__*/React.createElement(\"span\", {\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, \"Frets\"), /*#__PURE__*/React.createElement(\"button\", {\n    id: mAX(numberOfStrings),\n    onClick: increase,\n    className: \"gray-round-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, \"+\"));\n}\n\nfunction mapStateToProps(state) {\n  return {\n    numberOfFrets: state.numberOfFrets\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setFretCount: value => dispatch({\n      type: \"SET_FRET_COUNT\",\n      payload: value\n    })\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FretStepper);","map":{"version":3,"sources":["/Users/jake/Desktop/scalefinder-v3/src/components/FretStepper.js"],"names":["React","connect","FretStepper","props","numberOfFrets","setFretCount","decrease","increase","min","n","max","numberOfStrings","toString","mAX","mapStateToProps","state","mapDispatchToProps","dispatch","value","type","payload"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,QAAM;AAAEC,IAAAA,aAAF;AAAiBC,IAAAA;AAAjB,MAAkCF,KAAxC;;AACA,QAAMG,QAAQ,GAAG,MAAM;AACrB,QAAIF,aAAa,KAAK,EAAtB,EAA0B;AACxBC,MAAAA,YAAY,CAACD,aAAa,GAAG,CAAjB,CAAZ;AACD;AACF,GAJD;;AAKA,QAAMG,QAAQ,GAAG,MAAM;AACrB,QAAIH,aAAa,KAAK,EAAtB,EAA0B;AACxBC,MAAAA,YAAY,CAACD,aAAa,GAAG,CAAjB,CAAZ;AACD;AACF,GAJD;;AAKA,QAAMI,GAAG,GAAIC,CAAD,IAAO;AACjB,WAAOA,CAAC,KAAK,EAAN,GAAW,OAAX,GAAqB,IAA5B;AACD,GAFD;;AAGA,QAAMC,GAAG,GAAID,CAAD,IAAO;AACjB,WAAOA,CAAC,KAAK,EAAN,GAAW,OAAX,GAAqB,IAA5B;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,EAAE,EAAED,GAAG,CAACG,eAAD,CADT;AAEE,IAAA,OAAO,EAAEL,QAFX;AAGE,IAAA,SAAS,EAAC,gBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,eAQE;AAAM,IAAA,IAAI,EAAC,MAAX;AAAkB,IAAA,EAAE,EAAC,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,aAAa,CAACQ,QAAd,EADH,CARF,eAWE;AAAM,IAAA,IAAI,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAXF,eAYE;AACE,IAAA,EAAE,EAAEC,GAAG,CAACF,eAAD,CADT;AAEE,IAAA,OAAO,EAAEJ,QAFX;AAGE,IAAA,SAAS,EAAC,gBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAZF,CADF;AAsBD;;AAED,SAASO,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLX,IAAAA,aAAa,EAAEW,KAAK,CAACX;AADhB,GAAP;AAGD;;AAED,SAASY,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACLZ,IAAAA,YAAY,EAAGa,KAAD,IACZD,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAE,gBAAR;AAA0BC,MAAAA,OAAO,EAAEF;AAAnC,KAAD;AAFL,GAAP;AAID;;AAED,eAAejB,OAAO,CAACa,eAAD,EAAkBE,kBAAlB,CAAP,CAA6Cd,WAA7C,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\n\nfunction FretStepper(props) {\n  const { numberOfFrets, setFretCount } = props;\n  const decrease = () => {\n    if (numberOfFrets !== 12) {\n      setFretCount(numberOfFrets - 1);\n    }\n  };\n  const increase = () => {\n    if (numberOfFrets !== 24) {\n      setFretCount(numberOfFrets + 1);\n    }\n  };\n  const min = (n) => {\n    return n === 12 ? \"limit\" : null;\n  };\n  const max = (n) => {\n    return n === 24 ? \"limit\" : null;\n  };\n\n  return (\n    <div className=\"stepper\">\n      <button\n        id={min(numberOfStrings)}\n        onClick={decrease}\n        className=\"gray-round-btn\"\n      >\n        -\n      </button>\n      <span type=\"text\" id=\"counter\">\n        {numberOfFrets.toString()}\n      </span>\n      <span type=\"text\">Frets</span>\n      <button\n        id={mAX(numberOfStrings)}\n        onClick={increase}\n        className=\"gray-round-btn\"\n      >\n        +\n      </button>\n    </div>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    numberOfFrets: state.numberOfFrets,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setFretCount: (value) =>\n      dispatch({ type: \"SET_FRET_COUNT\", payload: value }),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FretStepper);\n"]},"metadata":{},"sourceType":"module"}