{"ast":null,"code":"var _jsxFileName = \"/Users/jake/Desktop/personalprojects/scalefinder-v3/src/components/Stepper.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nconst fretValues = {\n  min: 12,\n  max: 24\n};\nconst stringValues = {\n  min: 4,\n  max: 12\n};\n\nfunction Stepper(props) {\n  const {\n    numberOfFrets,\n    numberOfStrings,\n    setFretCount,\n    setStringCount,\n    type\n  } = props;\n\n  const getLabel = () => {\n    return type + \"s\";\n  };\n\n  const stepUp = () => {\n    if (type === \"Fret\") {\n      if (numberOfFrets !== fretValues.max) {\n        setFretCount(numberOfFrets + 1);\n      }\n    }\n\n    if (type === \"String\") {\n      if (numberOfStrings !== stringValues.max) {\n        setStringCount(numberOfStrings + 1);\n      }\n    }\n  };\n\n  const stepDown = () => {\n    if (type === \"Fret\") {\n      if (numberOfFrets !== fretValues.min) {\n        setFretCount(numberOfFrets - 1);\n      }\n    }\n\n    if (type === \"String\") {\n      if (numberOfStrings !== stringValues.min) {\n        setStringCount(numberOfStrings - 1);\n      }\n    }\n  };\n\n  const min = () => {\n    if (type === \"Fret\") {\n      if (numberOfFrets === fretValues.min) {\n        return \"limit\";\n      }\n    }\n\n    if (type === \"String\") {\n      if (numberOfStrings === stringValues.min) {\n        return \"limit\";\n      }\n    }\n  };\n\n  const max = () => {\n    if (type === \"Fret\") {\n      if (numberOfFrets === fretValues.max) {\n        return \"limit\";\n      }\n    }\n\n    if (type === \"String\") {\n      if (numberOfStrings === stringValues.max) {\n        return \"limit\";\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"stepper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"stepper-btn-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"button\", {\n    id: min(numberOfFrets),\n    onClick: stepDown,\n    className: \"plus-or-minus-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, \"-\"), /*#__PURE__*/React.createElement(\"span\", {\n    type: \"text\",\n    id: \"counter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, type === \"Fret\" ? numberOfFrets.toString() : numberOfStrings.toString()), /*#__PURE__*/React.createElement(\"button\", {\n    id: max(numberOfFrets),\n    onClick: stepUp,\n    className: \"plus-or-minus-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, \"+\")), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"stepper-label\",\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, getLabel()));\n}\n\nfunction mapStateToProps(state) {\n  return {\n    numberOfFrets: state.numberOfFrets,\n    numberOfStrings: state.numberOfStrings\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setFretCount: value => dispatch({\n      type: \"SET_FRET_COUNT\",\n      payload: value\n    }),\n    setStringCount: value => dispatch({\n      type: \"SET_STRING_COUNT\",\n      payload: value\n    })\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Stepper);","map":{"version":3,"sources":["/Users/jake/Desktop/personalprojects/scalefinder-v3/src/components/Stepper.js"],"names":["React","connect","fretValues","min","max","stringValues","Stepper","props","numberOfFrets","numberOfStrings","setFretCount","setStringCount","type","getLabel","stepUp","stepDown","toString","mapStateToProps","state","mapDispatchToProps","dispatch","value","payload"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\n\nconst fretValues = {\n  min: 12,\n  max: 24,\n};\n\nconst stringValues = {\n  min: 4,\n  max: 12,\n};\n\nfunction Stepper(props) {\n  const {\n    numberOfFrets,\n    numberOfStrings,\n    setFretCount,\n    setStringCount,\n    type,\n  } = props;\n\n  const getLabel = () => {\n    return type + \"s\";\n  };\n\n  const stepUp = () => {\n    if (type === \"Fret\") {\n      if (numberOfFrets !== fretValues.max) {\n        setFretCount(numberOfFrets + 1);\n      }\n    }\n    if (type === \"String\") {\n      if (numberOfStrings !== stringValues.max) {\n        setStringCount(numberOfStrings + 1);\n      }\n    }\n  };\n\n  const stepDown = () => {\n    if (type === \"Fret\") {\n      if (numberOfFrets !== fretValues.min) {\n        setFretCount(numberOfFrets - 1);\n      }\n    }\n    if (type === \"String\") {\n      if (numberOfStrings !== stringValues.min) {\n        setStringCount(numberOfStrings - 1);\n      }\n    }\n  };\n\n  const min = () => {\n    if (type === \"Fret\") {\n      if (numberOfFrets === fretValues.min) {\n        return \"limit\";\n      }\n    }\n    if (type === \"String\") {\n      if (numberOfStrings === stringValues.min) {\n        return \"limit\";\n      }\n    }\n  };\n\n  const max = () => {\n    if (type === \"Fret\") {\n      if (numberOfFrets === fretValues.max) {\n        return \"limit\";\n      }\n    }\n    if (type === \"String\") {\n      if (numberOfStrings === stringValues.max) {\n        return \"limit\";\n      }\n    }\n  };\n\n  return (\n    <div className=\"stepper\">\n      <div className=\"stepper-btn-container\">\n        {\" \"}\n        <button\n          id={min(numberOfFrets)}\n          onClick={stepDown}\n          className=\"plus-or-minus-btn\"\n        >\n          -\n        </button>\n        <span type=\"text\" id=\"counter\">\n          {type === \"Fret\"\n            ? numberOfFrets.toString()\n            : numberOfStrings.toString()}\n        </span>\n        <button\n          id={max(numberOfFrets)}\n          onClick={stepUp}\n          className=\"plus-or-minus-btn\"\n        >\n          +\n        </button>\n      </div>\n      <span className=\"stepper-label\" type=\"text\">\n        {getLabel()}\n      </span>\n    </div>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    numberOfFrets: state.numberOfFrets,\n    numberOfStrings: state.numberOfStrings,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setFretCount: (value) =>\n      dispatch({ type: \"SET_FRET_COUNT\", payload: value }),\n    setStringCount: (value) =>\n      dispatch({ type: \"SET_STRING_COUNT\", payload: value }),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Stepper);\n"]},"metadata":{},"sourceType":"module"}