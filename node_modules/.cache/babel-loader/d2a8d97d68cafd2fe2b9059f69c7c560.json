{"ast":null,"code":"var _jsxFileName = \"/Users/jake/Desktop/scalefinder-v3/src/components/String.js\";\n// renders number of frets from store; with root note based on standard tuning for number of strings\n// has state and can change its own tuning; marker will indicate custom tuning\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport Fret from \"./Fret\";\n\nfunction String(props) {\n  // react.useState for a tuning value (default props.root), then buttons to go up and down 1 step at a down. need parser func\n  const tuneUp = () => {};\n\n  const tuneDown = () => {}; //   const renderFrets = () => {\n  //     // array.keys() from props.numberOfFrets\n  //     return arr.map((noteIndex, stringIndex) => {\n  //       return (\n  //         <String\n  //           rootIndex={noteIndex}\n  //           stringIndex={stringIndex}\n  //           numberOfFrets={props.numberOfFrets}\n  //         ></String>\n  //       );\n  //     });\n  //   };\n  // componentDidUpdate for changeTuningRequest eventually\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, \"this guitar string is rendering frets\"));\n}\n\nexport default String;","map":{"version":3,"sources":["/Users/jake/Desktop/scalefinder-v3/src/components/String.js"],"names":["React","connect","Fret","String","props","tuneUp","tuneDown"],"mappings":";AAAA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AACrB;AAEA,QAAMC,MAAM,GAAG,MAAM,CAAE,CAAvB;;AAEA,QAAMC,QAAQ,GAAG,MAAM,CAAE,CAAzB,CALqB,CAOrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CADF,CADF;AAKD;;AAED,eAAeH,MAAf","sourcesContent":["// renders number of frets from store; with root note based on standard tuning for number of strings\n// has state and can change its own tuning; marker will indicate custom tuning\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport Fret from \"./Fret\";\n\nfunction String(props) {\n  // react.useState for a tuning value (default props.root), then buttons to go up and down 1 step at a down. need parser func\n\n  const tuneUp = () => {};\n\n  const tuneDown = () => {};\n\n  //   const renderFrets = () => {\n  //     // array.keys() from props.numberOfFrets\n  //     return arr.map((noteIndex, stringIndex) => {\n  //       return (\n  //         <String\n  //           rootIndex={noteIndex}\n  //           stringIndex={stringIndex}\n  //           numberOfFrets={props.numberOfFrets}\n  //         ></String>\n  //       );\n  //     });\n  //   };\n\n  // componentDidUpdate for changeTuningRequest eventually\n\n  return (\n    <div>\n      <p>this guitar string is rendering frets</p>\n    </div>\n  );\n}\n\nexport default String;\n"]},"metadata":{},"sourceType":"module"}