{"ast":null,"code":"var _jsxFileName = \"/Users/jake/Desktop/scalefinder-v3/src/components/Login.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport SignUpForm from \"./SignUpForm\";\nconst myHeaders = new Headers();\nmyHeaders.append(\"Content-Type\", \"application/json\");\n\nfunction Login(props) {\n  const [open, setOpen] = React.useState(false);\n  const [signingUp, toggleSigningUp] = React.useState(false);\n  const [username, updateUsername] = React.useState(\"\");\n  const [email, updateEmail] = React.useState(\"\");\n  const [password, updatePassword] = React.useState(\"\");\n\n  const close = () => {\n    setOpen(false);\n    toggleSigningUp(false);\n    updatePassword(\"\");\n  };\n\n  const toggle = () => {\n    setOpen(!open);\n  };\n\n  const toggleSignUp = () => {\n    toggleSigningUp(!signingUp);\n  };\n\n  const handleEmailChange = event => {\n    updateEmail(event.target.value);\n  };\n\n  const handleUsernameChange = event => {\n    updateUsername(event.target.value);\n  };\n\n  const handlePasswordChange = event => {\n    updatePassword(event.target.value);\n  };\n\n  const submitLoginInfo = () => {\n    const raw = JSON.stringify({\n      username,\n      email,\n      password\n    });\n    const requestOptions = {\n      method: \"POST\",\n      headers: myHeaders,\n      body: raw,\n      redirect: \"follow\"\n    };\n    fetch(\"http://localhost:5000/api/user/login\", requestOptions).then(response => response.text()).then(result => console.log(result)).catch(error => console.log(\"error\", error));\n  };\n\n  const signUp = () => {\n    const raw = JSON.stringify({\n      email,\n      password,\n      username\n    });\n    const requestOptions = {\n      method: \"POST\",\n      headers: myHeaders,\n      body: raw,\n      redirect: \"follow\"\n    };\n    fetch(\"http://localhost:5000/api/user/signup\", requestOptions).then(response => response.text()).then(result => console.log(result)).catch(error => console.log(\"error\", error));\n  }; // So this works at the most basic level: Can login to admin and console.log success/fail\n  // Next: Sign up and Log Out functionality\n  // Then: Render frontend from user preferences, and update user preferences onChange ? maybe opposite order ?\n  // Then: Session Tokens round 2 to remember the users.\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login-root\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"open-login-button\",\n    onClick: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, \"Login or Sign up to save your settings\"), open ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login-modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, signingUp ? /*#__PURE__*/React.createElement(\"input\", {\n    id: \"username\",\n    value: username,\n    onChange: handleUsernameChange,\n    placeholder: \"Username...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 15\n    }\n  }) : null, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"email\",\n    value: email,\n    onChange: handleEmailChange,\n    placeholder: \"Email Address...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"password\",\n    value: password,\n    onChange: handlePasswordChange,\n    placeholder: \"Password...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  })), signingUp ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"signup-button\",\n    onClick: signUp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 15\n    }\n  }, \"Sign up\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"close\",\n    className: \"close-button\",\n    onClick: close,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 15\n    }\n  }, \"Close\")) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"login-button\",\n    onClick: submitLoginInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 15\n    }\n  }, \"Login\"), \"or\", /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"signup-button\",\n    onClick: toggleSignUp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 15\n    }\n  }, \"Sign up\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"close\",\n    className: \"close-button\",\n    onClick: close,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 15\n    }\n  }, \"Close\"))) : null);\n}\n\nfunction mapStateToProps(state) {\n  return {};\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {// loginUser: () =>\n    // logOutUser: () => dispatch({ type: \"LOG_OUT\" }),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/Users/jake/Desktop/scalefinder-v3/src/components/Login.js"],"names":["React","connect","SignUpForm","myHeaders","Headers","append","Login","props","open","setOpen","useState","signingUp","toggleSigningUp","username","updateUsername","email","updateEmail","password","updatePassword","close","toggle","toggleSignUp","handleEmailChange","event","target","value","handleUsernameChange","handlePasswordChange","submitLoginInfo","raw","JSON","stringify","requestOptions","method","headers","body","redirect","fetch","then","response","text","result","console","log","catch","error","signUp","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport SignUpForm from \"./SignUpForm\";\n\nconst myHeaders = new Headers();\nmyHeaders.append(\"Content-Type\", \"application/json\");\n\nfunction Login(props) {\n  const [open, setOpen] = React.useState(false);\n\n  const [signingUp, toggleSigningUp] = React.useState(false);\n\n  const [username, updateUsername] = React.useState(\"\");\n  const [email, updateEmail] = React.useState(\"\");\n  const [password, updatePassword] = React.useState(\"\");\n\n  const close = () => {\n    setOpen(false);\n    toggleSigningUp(false);\n    updatePassword(\"\");\n  };\n\n  const toggle = () => {\n    setOpen(!open);\n  };\n\n  const toggleSignUp = () => {\n    toggleSigningUp(!signingUp);\n  };\n\n  const handleEmailChange = (event) => {\n    updateEmail(event.target.value);\n  };\n\n  const handleUsernameChange = (event) => {\n    updateUsername(event.target.value);\n  };\n\n  const handlePasswordChange = (event) => {\n    updatePassword(event.target.value);\n  };\n\n  const submitLoginInfo = () => {\n    const raw = JSON.stringify({\n      username,\n      email,\n      password,\n    });\n\n    const requestOptions = {\n      method: \"POST\",\n      headers: myHeaders,\n      body: raw,\n      redirect: \"follow\",\n    };\n    fetch(\"http://localhost:5000/api/user/login\", requestOptions)\n      .then((response) => response.text())\n      .then((result) => console.log(result))\n      .catch((error) => console.log(\"error\", error));\n  };\n\n  const signUp = () => {\n    const raw = JSON.stringify({\n      email,\n      password,\n      username,\n    });\n\n    const requestOptions = {\n      method: \"POST\",\n      headers: myHeaders,\n      body: raw,\n      redirect: \"follow\",\n    };\n    fetch(\"http://localhost:5000/api/user/signup\", requestOptions)\n      .then((response) => response.text())\n      .then((result) => console.log(result))\n      .catch((error) => console.log(\"error\", error));\n  };\n\n  // So this works at the most basic level: Can login to admin and console.log success/fail\n  // Next: Sign up and Log Out functionality\n  // Then: Render frontend from user preferences, and update user preferences onChange ? maybe opposite order ?\n  // Then: Session Tokens round 2 to remember the users.\n\n  return (\n    <div className=\"login-root\">\n      <button className=\"open-login-button\" onClick={toggle}>\n        Login or Sign up to save your settings\n      </button>\n      {open ? (\n        <div className=\"login-modal\">\n          <form>\n            {signingUp ? (\n              <input\n                id=\"username\"\n                value={username}\n                onChange={handleUsernameChange}\n                placeholder=\"Username...\"\n              />\n            ) : null}\n            <input\n              id=\"email\"\n              value={email}\n              onChange={handleEmailChange}\n              placeholder=\"Email Address...\"\n            />\n            <input\n              id=\"password\"\n              value={password}\n              onChange={handlePasswordChange}\n              placeholder=\"Password...\"\n            />\n          </form>\n          {signingUp ? (\n            <div className=\"button-container\">\n              <button type=\"submit\" className=\"signup-button\" onClick={signUp}>\n                Sign up\n              </button>\n              <button type=\"close\" className=\"close-button\" onClick={close}>\n                Close\n              </button>\n            </div>\n          ) : (\n            <div className=\"button-container\">\n              <button\n                type=\"submit\"\n                className=\"login-button\"\n                onClick={submitLoginInfo}\n              >\n                Login\n              </button>\n              {\"or\"}\n              <button\n                type=\"submit\"\n                className=\"signup-button\"\n                onClick={toggleSignUp}\n              >\n                Sign up\n              </button>\n              <button type=\"close\" className=\"close-button\" onClick={close}>\n                Close\n              </button>\n            </div>\n          )}\n        </div>\n      ) : null}\n    </div>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {};\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    // loginUser: () =>\n    // logOutUser: () => dispatch({ type: \"LOG_OUT\" }),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}