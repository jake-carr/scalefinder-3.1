{"ast":null,"code":"var _jsxFileName = \"/Users/jake/Desktop/scalefinder-v3/src/App.js\";\nimport React from \"react\";\nimport \"./App.scss\";\nimport { connect } from \"react-redux\";\nimport Fretboard from \"./components/Fretboard\";\n\nfunction App(props) {\n  const toggleSharps = () => {\n    props.toggle(\"sharps\");\n  };\n\n  const toggleHighlightRoots = () => {\n    props.toggle(\"highlightRoots\");\n  };\n\n  const toggleShowUnusedNotes = () => {\n    props.toggle(\"showUnusedNotes\");\n  };\n\n  const toggleShowDegrees = () => {\n    props.toggle(\"showDegrees\");\n  };\n\n  const toggleIndianNotation = () => {\n    props.toggle(\"indianDegreeNotation\");\n  };\n\n  const toggleInfoModal = () => {\n    props.toggle(\"infoModalOpen\");\n  };\n\n  const toggleOptions = {\n    sharps: {\n      toggle: toggleSharps,\n      btnText: props.sharps ? \"♭\" : \"♯\",\n      round: true\n    },\n    highlightRoots: {\n      toggle: toggleHighlightRoots,\n      btnText: \"Highlight roots\",\n      round: false\n    },\n    showUnusedNotes: {\n      toggle: toggleShowUnusedNotes,\n      btnText: props.showUnusedNotes ? \"Label scale only\" : \"Label all notes\",\n      round: false\n    },\n    showDegrees: {\n      toggle: toggleShowDegrees,\n      btnText: props.showDegrees ? \"Hide degrees\" : \"Show degrees\",\n      round: false\n    },\n    infoModal: {\n      toggle: toggleInfoModal,\n      btnText: \"info\",\n      round: true\n    },\n    indianDegreeNotation: {\n      toggle: toggleSharps,\n      btnText: props.indianDegreeNotation ? \"Numbered Degrees\" : \"Indian Swara Degrees\",\n      round: true\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"toggle-button-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, \"// make toggles into an arr and then RenderToggleButtons :)\", /*#__PURE__*/React.createElement(\"button\", {\n    onClick: toggleSharps,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, props.sharps ? \"♭\" : \"♯\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: toggleHighlightRoots,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, props.highlightRoots ? \"true\" : \"false\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: toggleShowUnusedNotes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, props.showUnusedNotes ? \"true\" : \"false\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: toggleShowDegrees,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, props.showDegrees ? \"true\" : \"false\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: toggleIndianNotation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, props.indianDegreeNotation ? \"true\" : \"false\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: toggleInfoModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, props.infoModalOpen ? \"true\" : \"false\")), /*#__PURE__*/React.createElement(Fretboard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction mapStateToProps(state) {\n  return {\n    sharps: state.sharps,\n    highlightRoots: state.highlightRoots,\n    showUnusedNotes: state.showUnusedNotes,\n    showDegrees: state.showDegrees,\n    indianDegreeNotation: state.indianDegreeNotation,\n    infoModalOpen: state.infoModalOpen\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    toggle: name => dispatch({\n      type: \"TOGGLE\",\n      payload: name\n    })\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/jake/Desktop/scalefinder-v3/src/App.js"],"names":["React","connect","Fretboard","App","props","toggleSharps","toggle","toggleHighlightRoots","toggleShowUnusedNotes","toggleShowDegrees","toggleIndianNotation","toggleInfoModal","toggleOptions","sharps","btnText","round","highlightRoots","showUnusedNotes","showDegrees","infoModal","indianDegreeNotation","infoModalOpen","mapStateToProps","state","mapDispatchToProps","dispatch","name","type","payload"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./App.scss\";\nimport { connect } from \"react-redux\";\nimport Fretboard from \"./components/Fretboard\";\n\nfunction App(props) {\n  const toggleSharps = () => {\n    props.toggle(\"sharps\");\n  };\n\n  const toggleHighlightRoots = () => {\n    props.toggle(\"highlightRoots\");\n  };\n\n  const toggleShowUnusedNotes = () => {\n    props.toggle(\"showUnusedNotes\");\n  };\n\n  const toggleShowDegrees = () => {\n    props.toggle(\"showDegrees\");\n  };\n\n  const toggleIndianNotation = () => {\n    props.toggle(\"indianDegreeNotation\");\n  };\n\n  const toggleInfoModal = () => {\n    props.toggle(\"infoModalOpen\");\n  };\n\n  const toggleOptions = {\n    sharps: {\n      toggle: toggleSharps,\n      btnText: props.sharps ? \"♭\" : \"♯\",\n      round: true,\n    },\n    highlightRoots: {\n      toggle: toggleHighlightRoots,\n      btnText: \"Highlight roots\",\n      round: false,\n    },\n    showUnusedNotes: {\n      toggle: toggleShowUnusedNotes,\n      btnText: props.showUnusedNotes ? \"Label scale only\" : \"Label all notes\",\n      round: false,\n    },\n    showDegrees: {\n      toggle: toggleShowDegrees,\n      btnText: props.showDegrees ? \"Hide degrees\" : \"Show degrees\",\n      round: false,\n    },\n    infoModal: {\n      toggle: toggleInfoModal,\n      btnText: \"info\",\n      round: true,\n    },\n    indianDegreeNotation: {\n      toggle: toggleSharps,\n      btnText: props.indianDegreeNotation\n        ? \"Numbered Degrees\"\n        : \"Indian Swara Degrees\",\n      round: true,\n    },\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"toggle-button-container\">\n        // make toggles into an arr and then RenderToggleButtons :)\n        <button onClick={toggleSharps}>{props.sharps ? \"♭\" : \"♯\"}</button>\n        <button onClick={toggleHighlightRoots}>\n          {props.highlightRoots ? \"true\" : \"false\"}\n        </button>\n        <button onClick={toggleShowUnusedNotes}>\n          {props.showUnusedNotes ? \"true\" : \"false\"}\n        </button>\n        <button onClick={toggleShowDegrees}>\n          {props.showDegrees ? \"true\" : \"false\"}\n        </button>\n        <button onClick={toggleIndianNotation}>\n          {props.indianDegreeNotation ? \"true\" : \"false\"}\n        </button>\n        <button onClick={toggleInfoModal}>\n          {props.infoModalOpen ? \"true\" : \"false\"}\n        </button>\n      </div>\n      {/* note + scale selectors too*/}\n      <Fretboard></Fretboard>\n    </div>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    sharps: state.sharps,\n    highlightRoots: state.highlightRoots,\n    showUnusedNotes: state.showUnusedNotes,\n    showDegrees: state.showDegrees,\n    indianDegreeNotation: state.indianDegreeNotation,\n    infoModalOpen: state.infoModalOpen,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    toggle: (name) => dispatch({ type: \"TOGGLE\", payload: name }),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}