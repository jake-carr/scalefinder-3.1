{"ast":null,"code":"var _jsxFileName = \"/Users/jake/Desktop/scalefinder-v3/src/components/Fretboard.js\";\n// renders: strings.\n// redux: options for number of strings which each render in that Standard Tuning, and a slider/input for number of frets.\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport String from \"./String\";\n\nfunction Fretboard(props) {\n  // react.useState for a value (default 24), then a slider for number of frets.\n  // # of strings will be <dropdown> menu , rendered from stringOptions file\n  const changeNumberOfStrings = () => {\n    props.changeNumberOfStrings(7);\n  };\n\n  const changeNumberOfFrets = () => {\n    props.changeNumberOfFrets(12);\n  };\n\n  const renderGuitarStrings = () => {\n    // get tuning array for that number\n    let arr = [0, 1, 2];\n    return arr.map((noteIndex, stringIndex) => {\n      return /*#__PURE__*/React.createElement(String, {\n        rootIndex: noteIndex,\n        stringIndex: stringIndex,\n        numberOfFrets: props.numberOfFrets,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 9\n        }\n      });\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fretboard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fretboard-options-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: changeNumberOfStrings,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, \"Number of strings: \", props.numberOfStrings), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: changeNumberOfFrets,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, \"Number of frets: \", props.numberOfFrets)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"guitar-string-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, renderGuitarStrings()));\n}\n\nfunction mapStateToProps(state) {\n  return {\n    numberOfStrings: state.numberOfStrings,\n    numberOfFrets: state.numberOfFrets\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    changeNumberOfFrets: value => dispatch({\n      type: \"SET_FRET_COUNT\",\n      payload: value\n    }),\n    changeNumberOfStrings: value => dispatch({\n      type: \"SET_STRING_COUNT\",\n      payload: value\n    })\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Fretboard);","map":{"version":3,"sources":["/Users/jake/Desktop/scalefinder-v3/src/components/Fretboard.js"],"names":["React","connect","String","Fretboard","props","changeNumberOfStrings","changeNumberOfFrets","renderGuitarStrings","arr","map","noteIndex","stringIndex","numberOfFrets","numberOfStrings","mapStateToProps","state","mapDispatchToProps","dispatch","value","type","payload"],"mappings":";AAAA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACxB;AACA;AAEA,QAAMC,qBAAqB,GAAG,MAAM;AAClCD,IAAAA,KAAK,CAACC,qBAAN,CAA4B,CAA5B;AACD,GAFD;;AAIA,QAAMC,mBAAmB,GAAG,MAAM;AAChCF,IAAAA,KAAK,CAACE,mBAAN,CAA0B,EAA1B;AACD,GAFD;;AAIA,QAAMC,mBAAmB,GAAG,MAAM;AAChC;AACA,QAAIC,GAAG,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAV;AACA,WAAOA,GAAG,CAACC,GAAJ,CAAQ,CAACC,SAAD,EAAYC,WAAZ,KAA4B;AACzC,0BACE,oBAAC,MAAD;AACE,QAAA,SAAS,EAAED,SADb;AAEE,QAAA,WAAW,EAAEC,WAFf;AAGE,QAAA,aAAa,EAAEP,KAAK,CAACQ,aAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAOD,KARM,CAAP;AASD,GAZD;;AAcA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,OAAO,EAAEP,qBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACsBD,KAAK,CAACS,eAD5B,CADF,eAIE;AAAQ,IAAA,OAAO,EAAEP,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACoBF,KAAK,CAACQ,aAD1B,CAJF,CADF,eASE;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0CL,mBAAmB,EAA7D,CATF,CADF;AAaD;;AAED,SAASO,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLF,IAAAA,eAAe,EAAEE,KAAK,CAACF,eADlB;AAELD,IAAAA,aAAa,EAAEG,KAAK,CAACH;AAFhB,GAAP;AAID;;AAED,SAASI,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACLX,IAAAA,mBAAmB,EAAGY,KAAD,IACnBD,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAE,gBAAR;AAA0BC,MAAAA,OAAO,EAAEF;AAAnC,KAAD,CAFL;AAGLb,IAAAA,qBAAqB,EAAGa,KAAD,IACrBD,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAE,kBAAR;AAA4BC,MAAAA,OAAO,EAAEF;AAArC,KAAD;AAJL,GAAP;AAMD;;AAED,eAAejB,OAAO,CAACa,eAAD,EAAkBE,kBAAlB,CAAP,CAA6Cb,SAA7C,CAAf","sourcesContent":["// renders: strings.\n// redux: options for number of strings which each render in that Standard Tuning, and a slider/input for number of frets.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport String from \"./String\";\n\nfunction Fretboard(props) {\n  // react.useState for a value (default 24), then a slider for number of frets.\n  // # of strings will be <dropdown> menu , rendered from stringOptions file\n\n  const changeNumberOfStrings = () => {\n    props.changeNumberOfStrings(7);\n  };\n\n  const changeNumberOfFrets = () => {\n    props.changeNumberOfFrets(12);\n  };\n\n  const renderGuitarStrings = () => {\n    // get tuning array for that number\n    let arr = [0, 1, 2];\n    return arr.map((noteIndex, stringIndex) => {\n      return (\n        <String\n          rootIndex={noteIndex}\n          stringIndex={stringIndex}\n          numberOfFrets={props.numberOfFrets}\n        ></String>\n      );\n    });\n  };\n\n  return (\n    <div className=\"fretboard\">\n      <div className=\"fretboard-options-container\">\n        <button onClick={changeNumberOfStrings}>\n          Number of strings: {props.numberOfStrings}\n        </button>\n        <button onClick={changeNumberOfFrets}>\n          Number of frets: {props.numberOfFrets}\n        </button>\n      </div>\n      <div className=\"guitar-string-container\">{renderGuitarStrings()}</div>\n    </div>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    numberOfStrings: state.numberOfStrings,\n    numberOfFrets: state.numberOfFrets,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    changeNumberOfFrets: (value) =>\n      dispatch({ type: \"SET_FRET_COUNT\", payload: value }),\n    changeNumberOfStrings: (value) =>\n      dispatch({ type: \"SET_STRING_COUNT\", payload: value }),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Fretboard);\n"]},"metadata":{},"sourceType":"module"}