{"ast":null,"code":"export const sharps = [\"A\", \"A#\", \"B\", \"C\", \"C#\", \"D\", \"D#\", \"E\", \"F\", \"F#\", \"G\", \"G#\"];\nexport const flats = [\"A\", \"Bb\", \"B\", \"C\", \"Db\", \"D\", \"Eb\", \"E\", \"F\", \"Gb\", \"G\", \"Ab\"];\nexport const swaras = [\"Sa\", \"Re\", \"Ga\", \"Ma\", \"Pa\", \"Da\", \"Ni\"];\nexport const getAlteration = isSharps => {\n  return isSharps ? sharps : flats;\n};\nexport const convertIndexToString = (index, isSharps) => {\n  if (isSharps) {\n    return sharps[index];\n  } else {\n    return flats[index];\n  }\n};\nexport const parse = index => {\n  if (index > 23) {\n    return index - 24;\n  } else if (index > 11) {\n    return index - 12;\n  } else return index;\n};\nexport const createScale = (rootIndex, pattern) => {\n  let scale = [];\n  scale.push(rootIndex);\n  let recent = scale[0];\n\n  for (let i = 0; i < pattern.length; i++) {\n    let note = recent + pattern[i];\n    scale.push(parse(note));\n    recent = scale[i + 1];\n  }\n\n  return scale;\n};","map":{"version":3,"sources":["/Users/jake/Desktop/scalefinder-v3/src/constants/utils.js"],"names":["sharps","flats","swaras","getAlteration","isSharps","convertIndexToString","index","parse","createScale","rootIndex","pattern","scale","push","recent","i","length","note"],"mappings":"AAAA,OAAO,MAAMA,MAAM,GAAG,CACpB,GADoB,EAEpB,IAFoB,EAGpB,GAHoB,EAIpB,GAJoB,EAKpB,IALoB,EAMpB,GANoB,EAOpB,IAPoB,EAQpB,GARoB,EASpB,GAToB,EAUpB,IAVoB,EAWpB,GAXoB,EAYpB,IAZoB,CAAf;AAeP,OAAO,MAAMC,KAAK,GAAG,CACnB,GADmB,EAEnB,IAFmB,EAGnB,GAHmB,EAInB,GAJmB,EAKnB,IALmB,EAMnB,GANmB,EAOnB,IAPmB,EAQnB,GARmB,EASnB,GATmB,EAUnB,IAVmB,EAWnB,GAXmB,EAYnB,IAZmB,CAAd;AAeP,OAAO,MAAMC,MAAM,GAAG,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,CAAf;AAEP,OAAO,MAAMC,aAAa,GAAIC,QAAD,IAAc;AACzC,SAAOA,QAAQ,GAAGJ,MAAH,GAAYC,KAA3B;AACD,CAFM;AAIP,OAAO,MAAMI,oBAAoB,GAAG,CAACC,KAAD,EAAQF,QAAR,KAAqB;AACvD,MAAIA,QAAJ,EAAc;AACZ,WAAOJ,MAAM,CAACM,KAAD,CAAb;AACD,GAFD,MAEO;AACL,WAAOL,KAAK,CAACK,KAAD,CAAZ;AACD;AACF,CANM;AAQP,OAAO,MAAMC,KAAK,GAAID,KAAD,IAAW;AAC9B,MAAIA,KAAK,GAAG,EAAZ,EAAgB;AACd,WAAOA,KAAK,GAAG,EAAf;AACD,GAFD,MAEO,IAAIA,KAAK,GAAG,EAAZ,EAAgB;AACrB,WAAOA,KAAK,GAAG,EAAf;AACD,GAFM,MAEA,OAAOA,KAAP;AACR,CANM;AAQP,OAAO,MAAME,WAAW,GAAG,CAACC,SAAD,EAAYC,OAAZ,KAAwB;AACjD,MAAIC,KAAK,GAAG,EAAZ;AACAA,EAAAA,KAAK,CAACC,IAAN,CAAWH,SAAX;AACA,MAAII,MAAM,GAAGF,KAAK,CAAC,CAAD,CAAlB;;AACA,OAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,OAAO,CAACK,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACvC,QAAIE,IAAI,GAAGH,MAAM,GAAGH,OAAO,CAACI,CAAD,CAA3B;AACAH,IAAAA,KAAK,CAACC,IAAN,CAAWL,KAAK,CAACS,IAAD,CAAhB;AACAH,IAAAA,MAAM,GAAGF,KAAK,CAACG,CAAC,GAAG,CAAL,CAAd;AACD;;AACD,SAAOH,KAAP;AACD,CAVM","sourcesContent":["export const sharps = [\n  \"A\",\n  \"A#\",\n  \"B\",\n  \"C\",\n  \"C#\",\n  \"D\",\n  \"D#\",\n  \"E\",\n  \"F\",\n  \"F#\",\n  \"G\",\n  \"G#\",\n];\n\nexport const flats = [\n  \"A\",\n  \"Bb\",\n  \"B\",\n  \"C\",\n  \"Db\",\n  \"D\",\n  \"Eb\",\n  \"E\",\n  \"F\",\n  \"Gb\",\n  \"G\",\n  \"Ab\",\n];\n\nexport const swaras = [\"Sa\", \"Re\", \"Ga\", \"Ma\", \"Pa\", \"Da\", \"Ni\"];\n\nexport const getAlteration = (isSharps) => {\n  return isSharps ? sharps : flats;\n};\n\nexport const convertIndexToString = (index, isSharps) => {\n  if (isSharps) {\n    return sharps[index];\n  } else {\n    return flats[index];\n  }\n};\n\nexport const parse = (index) => {\n  if (index > 23) {\n    return index - 24;\n  } else if (index > 11) {\n    return index - 12;\n  } else return index;\n};\n\nexport const createScale = (rootIndex, pattern) => {\n  let scale = [];\n  scale.push(rootIndex);\n  let recent = scale[0];\n  for (let i = 0; i < pattern.length; i++) {\n    let note = recent + pattern[i];\n    scale.push(parse(note));\n    recent = scale[i + 1];\n  }\n  return scale;\n};\n"]},"metadata":{},"sourceType":"module"}