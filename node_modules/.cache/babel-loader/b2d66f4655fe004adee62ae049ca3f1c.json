{"ast":null,"code":"var _jsxFileName = \"/Users/jake/Desktop/personalprojects/scalefinder-v3/src/components-jsx/ScaleTray.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nclass ScaleTray extends React.component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"scale-tray\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }\n    }, \"my scale tray!\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {\n        this.props.setScaleIndex(0);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }\n    }, \"CLICK FOR MAJOR\"));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    selectedScaleIndex: state.selectedScaleIndex\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setScaleIndex: value => dispatch({\n      type: \"SET_SCALE_INDEX\",\n      payload: value\n    })\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ScaleTray);","map":{"version":3,"sources":["/Users/jake/Desktop/personalprojects/scalefinder-v3/src/components-jsx/ScaleTray.jsx"],"names":["React","connect","ScaleTray","component","render","props","setScaleIndex","mapStateToProps","state","selectedScaleIndex","mapDispatchToProps","dispatch","value","type","payload"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,SAAN,SAAwBF,KAAK,CAACG,SAA9B,CAAwC;AACtCC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AACE,MAAA,OAAO,EAAE,MAAM;AACb,aAAKC,KAAL,CAAWC,aAAX,CAAyB,CAAzB;AACD,OAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFF,CADF;AAYD;;AAdqC;;AAkBxC,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLC,IAAAA,kBAAkB,EAAED,KAAK,CAACC;AADrB,GAAP;AAGD;;AAED,SAASC,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACLL,IAAAA,aAAa,EAAGM,KAAD,IACbD,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAE,iBAAR;AAA2BC,MAAAA,OAAO,EAAEF;AAApC,KAAD;AAFL,GAAP;AAID;;AAED,eAAeX,OAAO,CAACM,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CR,SAA7C,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\n\nclass ScaleTray extends React.component {\n  render() {\n    return (\n      <div className=\"scale-tray\">\n        <p>my scale tray!</p>\n        <button\n          onClick={() => {\n            this.props.setScaleIndex(0);\n          }}\n        >\n          CLICK FOR MAJOR\n        </button>\n      </div>\n    )\n  }\n}\n\n\nfunction mapStateToProps(state) {\n  return {\n    selectedScaleIndex: state.selectedScaleIndex,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setScaleIndex: (value) =>\n      dispatch({ type: \"SET_SCALE_INDEX\", payload: value }),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ScaleTray);\n"]},"metadata":{},"sourceType":"module"}