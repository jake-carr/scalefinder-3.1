{"ast":null,"code":"var _jsxFileName = \"/Users/jake/Desktop/scalefinder-v3/src/components/Stepper.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nfunction Stepper(props) {\n  const {\n    numberOfFrets,\n    setFretCount\n  } = props;\n\n  const min = n => {\n    n = 12 ? true : false;\n  };\n\n  const max = n => {\n    n = 24 ? true : false;\n  };\n\n  const increase = () => {\n    max(numberOfFrets) ? setFretCount(24) : setFretCount(numberOfFrets + 1);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fret-stepper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: increase,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, \"+\"), numberOfFrets.toString());\n}\n\nfunction mapStateToProps(state) {\n  return {\n    numberOfFrets: state.numberOfFrets\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setFretCount: value => dispatch({\n      type: \"FRET\",\n      payload: value\n    })\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Stepper);","map":{"version":3,"sources":["/Users/jake/Desktop/scalefinder-v3/src/components/Stepper.js"],"names":["React","connect","Stepper","props","numberOfFrets","setFretCount","min","n","max","increase","toString","mapStateToProps","state","mapDispatchToProps","dispatch","value","type","payload"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACtB,QAAM;AAAEC,IAAAA,aAAF;AAAiBC,IAAAA;AAAjB,MAAkCF,KAAxC;;AACA,QAAMG,GAAG,GAAIC,CAAD,IAAO;AACjBA,IAAAA,CAAC,GAAG,KAAK,IAAL,GAAY,KAAhB;AACD,GAFD;;AAGA,QAAMC,GAAG,GAAID,CAAD,IAAO;AACjBA,IAAAA,CAAC,GAAG,KAAK,IAAL,GAAY,KAAhB;AACD,GAFD;;AAGA,QAAME,QAAQ,GAAG,MAAM;AACrBD,IAAAA,GAAG,CAACJ,aAAD,CAAH,GAAqBC,YAAY,CAAC,EAAD,CAAjC,GAAwCA,YAAY,CAACD,aAAa,GAAG,CAAjB,CAApD;AACD,GAFD;;AAGA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,OAAO,EAAEK,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,EAEGL,aAAa,CAACM,QAAd,EAFH,CADF;AAMD;;AAED,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLR,IAAAA,aAAa,EAAEQ,KAAK,CAACR;AADhB,GAAP;AAGD;;AAED,SAASS,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACLT,IAAAA,YAAY,EAAGU,KAAD,IAAWD,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAE,MAAR;AAAgBC,MAAAA,OAAO,EAAEF;AAAzB,KAAD;AAD5B,GAAP;AAGD;;AAED,eAAed,OAAO,CAACU,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CX,OAA7C,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\n\nfunction Stepper(props) {\n  const { numberOfFrets, setFretCount } = props;\n  const min = (n) => {\n    n = 12 ? true : false;\n  };\n  const max = (n) => {\n    n = 24 ? true : false;\n  };\n  const increase = () => {\n    max(numberOfFrets) ? setFretCount(24) : setFretCount(numberOfFrets + 1);\n  };\n  return (\n    <div className=\"fret-stepper\">\n      <button onClick={increase}>+</button>\n      {numberOfFrets.toString()}\n    </div>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    numberOfFrets: state.numberOfFrets,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setFretCount: (value) => dispatch({ type: \"FRET\", payload: value }),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Stepper);\n"]},"metadata":{},"sourceType":"module"}