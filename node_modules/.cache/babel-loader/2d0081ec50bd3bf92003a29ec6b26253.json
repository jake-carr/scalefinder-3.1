{"ast":null,"code":"var _jsxFileName = \"/Users/jake/Desktop/scalefinder-v3/src/components/Fretboard.js\";\n// renders: strings.\n// redux: options for number of strings which each render in that Standard Tuning, and a slider/input for number of frets.\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport String from \"./String\";\n\nfunction Fretboard(props) {\n  // react.useState for a value (default 24), then a slider for number of frets.\n  // strings will be dropdown menu , rendered from a const file\n  const changeNumberOfStrings = () => {\n    props.changeNumberOfStrings(4);\n  };\n\n  const changeNumberOfFrets = () => {\n    props.changeNumberOfFrets(12);\n  }; //   const renderGuitarStrings = () => {\n  //     // get tuning array for that number\n  //     return arr.map((noteIndex, stringIndex) => {\n  //       return (\n  //         <String\n  //           rootIndex={noteIndex}\n  //           stringIndex={stringIndex}\n  //           numberOfFrets={props.numberOfFrets}\n  //         ></String>\n  //       );\n  //     });\n  //   };\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: changeNumberOfStrings,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, \"test strings\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: changeNumberOfFrets,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, \"test frets\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, props.numberOfStrings.toString()), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, props.numberOfFrets.toString()));\n}\n\nfunction mapStateToProps(state) {\n  return {\n    numberOfStrings: state.numberOfStrings,\n    numberOfFrets: state.numberOfFrets\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    changeNumberOfFrets: value => dispatch({\n      type: \"SET_FRET_COUNT\",\n      payload: value\n    }),\n    changeNumberOfStrings: value => dispatch({\n      type: \"SET_STRING_COUNT\",\n      payload: value\n    })\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Fretboard);","map":{"version":3,"sources":["/Users/jake/Desktop/scalefinder-v3/src/components/Fretboard.js"],"names":["React","connect","String","Fretboard","props","changeNumberOfStrings","changeNumberOfFrets","numberOfStrings","toString","numberOfFrets","mapStateToProps","state","mapDispatchToProps","dispatch","value","type","payload"],"mappings":";AAAA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACxB;AACA;AAEA,QAAMC,qBAAqB,GAAG,MAAM;AAClCD,IAAAA,KAAK,CAACC,qBAAN,CAA4B,CAA5B;AACD,GAFD;;AAIA,QAAMC,mBAAmB,GAAG,MAAM;AAChCF,IAAAA,KAAK,CAACE,mBAAN,CAA0B,EAA1B;AACD,GAFD,CARwB,CAYxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,OAAO,EAAED,qBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAQ,IAAA,OAAO,EAAEC,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIF,KAAK,CAACG,eAAN,CAAsBC,QAAtB,EAAJ,CAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIJ,KAAK,CAACK,aAAN,CAAoBD,QAApB,EAAJ,CAJF,CADF;AAQD;;AAED,SAASE,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLJ,IAAAA,eAAe,EAAEI,KAAK,CAACJ,eADlB;AAELE,IAAAA,aAAa,EAAEE,KAAK,CAACF;AAFhB,GAAP;AAID;;AAED,SAASG,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACLP,IAAAA,mBAAmB,EAAGQ,KAAD,IACnBD,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAE,gBAAR;AAA0BC,MAAAA,OAAO,EAAEF;AAAnC,KAAD,CAFL;AAGLT,IAAAA,qBAAqB,EAAGS,KAAD,IACrBD,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAE,kBAAR;AAA4BC,MAAAA,OAAO,EAAEF;AAArC,KAAD;AAJL,GAAP;AAMD;;AAED,eAAeb,OAAO,CAACS,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CT,SAA7C,CAAf","sourcesContent":["// renders: strings.\n// redux: options for number of strings which each render in that Standard Tuning, and a slider/input for number of frets.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport String from \"./String\";\n\nfunction Fretboard(props) {\n  // react.useState for a value (default 24), then a slider for number of frets.\n  // strings will be dropdown menu , rendered from a const file\n\n  const changeNumberOfStrings = () => {\n    props.changeNumberOfStrings(4);\n  };\n\n  const changeNumberOfFrets = () => {\n    props.changeNumberOfFrets(12);\n  };\n\n  //   const renderGuitarStrings = () => {\n  //     // get tuning array for that number\n  //     return arr.map((noteIndex, stringIndex) => {\n  //       return (\n  //         <String\n  //           rootIndex={noteIndex}\n  //           stringIndex={stringIndex}\n  //           numberOfFrets={props.numberOfFrets}\n  //         ></String>\n  //       );\n  //     });\n  //   };\n\n  return (\n    <div>\n      <button onClick={changeNumberOfStrings}>test strings</button>\n      <button onClick={changeNumberOfFrets}>test frets</button>\n      <p>{props.numberOfStrings.toString()}</p>\n      <p>{props.numberOfFrets.toString()}</p>\n    </div>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    numberOfStrings: state.numberOfStrings,\n    numberOfFrets: state.numberOfFrets,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    changeNumberOfFrets: (value) =>\n      dispatch({ type: \"SET_FRET_COUNT\", payload: value }),\n    changeNumberOfStrings: (value) =>\n      dispatch({ type: \"SET_STRING_COUNT\", payload: value }),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Fretboard);\n"]},"metadata":{},"sourceType":"module"}