{"ast":null,"code":"var _jsxFileName = \"/Users/jake/Desktop/scalefinder-v3/src/components/String.js\";\n// renders number of frets from store; with root note based on standard tuning for number of strings\n// has state and can change its own tuning; marker will indicate custom tuning\nimport React from \"react\";\nimport Fret from \"./Fret\";\n\nfunction String(props) {\n  // react.useState for a tuning value (default props.root), then buttons to go up and down 1 step at a down. need parser func\n  const tuneUp = () => {};\n\n  const tuneDown = () => {};\n\n  const renderFrets = () => {\n    // array.keys() from props.numberOfFrets\n    let arr = [1, 2];\n    return arr.map(noteIndex => {\n      return /*#__PURE__*/React.createElement(Fret, {\n        noteIndex: noteIndex,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 14\n        }\n      });\n    });\n  }; // componentDidUpdate for changeTuningRequest eventually\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"guitar-string\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 10\n    }\n  }, renderFrets());\n}\n\nexport default String;","map":{"version":3,"sources":["/Users/jake/Desktop/scalefinder-v3/src/components/String.js"],"names":["React","Fret","String","props","tuneUp","tuneDown","renderFrets","arr","map","noteIndex"],"mappings":";AAAA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AACrB;AAEA,QAAMC,MAAM,GAAG,MAAM,CAAE,CAAvB;;AAEA,QAAMC,QAAQ,GAAG,MAAM,CAAE,CAAzB;;AAEA,QAAMC,WAAW,GAAG,MAAM;AACxB;AACA,QAAIC,GAAG,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAV;AACA,WAAOA,GAAG,CAACC,GAAJ,CAASC,SAAD,IAAe;AAC5B,0BAAO,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAEA,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAFM,CAAP;AAGD,GAND,CAPqB,CAerB;;;AAEA,sBAAO;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCH,WAAW,EAA3C,CAAP;AACD;;AAED,eAAeJ,MAAf","sourcesContent":["// renders number of frets from store; with root note based on standard tuning for number of strings\n// has state and can change its own tuning; marker will indicate custom tuning\n\nimport React from \"react\";\nimport Fret from \"./Fret\";\n\nfunction String(props) {\n  // react.useState for a tuning value (default props.root), then buttons to go up and down 1 step at a down. need parser func\n\n  const tuneUp = () => {};\n\n  const tuneDown = () => {};\n\n  const renderFrets = () => {\n    // array.keys() from props.numberOfFrets\n    let arr = [1, 2];\n    return arr.map((noteIndex) => {\n      return <Fret noteIndex={noteIndex}></Fret>;\n    });\n  };\n\n  // componentDidUpdate for changeTuningRequest eventually\n\n  return <div className=\"guitar-string\">{renderFrets()}</div>;\n}\n\nexport default String;\n"]},"metadata":{},"sourceType":"module"}