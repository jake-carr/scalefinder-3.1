{"ast":null,"code":"var _jsxFileName = \"/Users/jake/Desktop/scalefinder-v3/src/components/Login.js\";\n// eslint-disable-next-line\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport SignUpForm from \"./SignUpForm\"; // function LogOut , a dumb component that displays name and gives logout button when !open && userID is real\n\nfunction LogOut(name) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"logout-component\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, \"Logged in as: \", name), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, \"Log Out\"));\n}\n\nfunction Login(props) {\n  const {\n    userID,\n    username\n  } = props;\n  const [open, setOpen] = React.useState(false);\n\n  const toggle = () => {\n    setOpen(!open);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login-form-modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, username !== null ? LogOut(username) : !open ? /*#__PURE__*/React.createElement(\"button\", {\n    className: \"open-login-button\",\n    onClick: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, \"Login to save settings\") : null, open ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login-form-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    className: \"form-control\",\n    id: \"email\",\n    \"aria-describedby\": \"emailHelp\",\n    placeholder: \"Enter email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    className: \"form-control\",\n    id: \"password\",\n    placeholder: \"Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"login-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, \"Login\"), \"or\", /*#__PURE__*/React.createElement(\"div\", {\n    type: \"submit\",\n    className: \"signUp-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(SignUpForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"close\",\n    className: \"close-button\",\n    onClick: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, \"Close\"))) : null);\n}\n\nfunction mapStateToProps(state) {\n  return {\n    userID: state.userID\n  };\n}\n\nexport default connect(mapStateToProps)(Login);","map":{"version":3,"sources":["/Users/jake/Desktop/scalefinder-v3/src/components/Login.js"],"names":["React","useState","connect","SignUpForm","LogOut","name","Login","props","userID","username","open","setOpen","toggle","mapStateToProps","state"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,UAAP,MAAuB,cAAvB,C,CAEA;;AAEA,SAASC,MAAT,CAAgBC,IAAhB,EAAsB;AACpB,sBACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAkBA,IAAlB,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,CADF;AAMD;;AAED,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACpB,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAuBF,KAA7B;AACA,QAAM,CAACG,IAAD,EAAOC,OAAP,IAAkBX,KAAK,CAACC,QAAN,CAAe,KAAf,CAAxB;;AAEA,QAAMW,MAAM,GAAG,MAAM;AACnBD,IAAAA,OAAO,CAAC,CAACD,IAAF,CAAP;AACD,GAFD;;AAGA,sBACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,QAAQ,KAAK,IAAb,GACCL,MAAM,CAACK,QAAD,CADP,GAEG,CAACC,IAAD,gBACF;AAAQ,IAAA,SAAS,EAAC,mBAAlB;AAAsC,IAAA,OAAO,EAAEE,MAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADE,GAIA,IAPN,EASGF,IAAI,gBACH;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,SAAS,EAAC,cAFZ;AAGE,IAAA,EAAE,EAAC,OAHL;AAIE,wBAAiB,WAJnB;AAKE,IAAA,WAAW,EAAC,aALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAQE;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,SAAS,EAAC,cAFZ;AAGE,IAAA,EAAE,EAAC,UAHL;AAIE,IAAA,WAAW,EAAC,UAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF,eAgBE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,cAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAIG,IAJH,eAKE;AAAK,IAAA,IAAI,EAAC,QAAV;AAAmB,IAAA,SAAS,EAAC,YAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CALF,eAQE;AAAQ,IAAA,IAAI,EAAC,OAAb;AAAqB,IAAA,SAAS,EAAC,cAA/B;AAA8C,IAAA,OAAO,EAAEE,MAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aARF,CAhBF,CADG,GA8BD,IAvCN,CADF;AA2CD;;AAED,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLN,IAAAA,MAAM,EAAEM,KAAK,CAACN;AADT,GAAP;AAGD;;AAED,eAAeN,OAAO,CAACW,eAAD,CAAP,CAAyBP,KAAzB,CAAf","sourcesContent":["// eslint-disable-next-line\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport SignUpForm from \"./SignUpForm\";\n\n// function LogOut , a dumb component that displays name and gives logout button when !open && userID is real\n\nfunction LogOut(name) {\n  return (\n    <div className=\"logout-component\">\n      <p>Logged in as: {name}</p>\n      <button>Log Out</button>\n    </div>\n  );\n}\n\nfunction Login(props) {\n  const { userID, username } = props;\n  const [open, setOpen] = React.useState(false);\n\n  const toggle = () => {\n    setOpen(!open);\n  };\n  return (\n    <div className=\"login-form-modal\">\n      {username !== null ? (\n        LogOut(username)\n      ) : !open ? (\n        <button className=\"open-login-button\" onClick={toggle}>\n          Login to save settings\n        </button>\n      ) : null}\n\n      {open ? (\n        <div className=\"login-form-container\">\n          <form>\n            <input\n              type=\"email\"\n              className=\"form-control\"\n              id=\"email\"\n              aria-describedby=\"emailHelp\"\n              placeholder=\"Enter email\"\n            />\n            <input\n              type=\"password\"\n              className=\"form-control\"\n              id=\"password\"\n              placeholder=\"Password\"\n            />\n          </form>\n          <div className=\"button-container\">\n            <button type=\"submit\" className=\"login-button\">\n              Login\n            </button>\n            {\"or\"}\n            <div type=\"submit\" className=\"signUp-div\">\n              <SignUpForm></SignUpForm>\n            </div>\n            <button type=\"close\" className=\"close-button\" onClick={toggle}>\n              Close\n            </button>\n          </div>\n        </div>\n      ) : null}\n    </div>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    userID: state.userID,\n  };\n}\n\nexport default connect(mapStateToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}