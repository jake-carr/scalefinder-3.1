{"ast":null,"code":"var _jsxFileName = \"/Users/jake/Desktop/scalefinder-v3/src/components/NumStringsDropdown.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nfunction NumStringsDropdown(props) {\n  const {\n    options,\n    numberOfStrings\n  } = props;\n\n  const renderOptions = () => {\n    return /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"dropdown-option-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 7\n      }\n    }, options.map((item, idx) => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: [item, idx],\n        className: \"dropdown-option-wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"dropdown-option-button\",\n        onClick: () => {\n          props.setStringCount(options[idx].indices.length);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 15\n        }\n      }, item.name));\n    }));\n  };\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => {\n    setOpen(!open);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"number-of-strings-dropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"dropdown-open-button\",\n    onClick: handleOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, \"Number of strings: \", numberOfStrings), open ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal\",\n    open: open,\n    onClose: handleClose,\n    onClick: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, renderOptions()) : null);\n}\n\nfunction mapStateToProps(state) {\n  return {\n    numberOfStrings: state.numberOfStrings\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setStringCount: value => dispatch({\n      type: \"SET_STRING_COUNT\",\n      payload: value\n    })\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NumStringsDropdown);","map":{"version":3,"sources":["/Users/jake/Desktop/scalefinder-v3/src/components/NumStringsDropdown.js"],"names":["React","connect","NumStringsDropdown","props","options","numberOfStrings","renderOptions","map","item","idx","setStringCount","indices","length","name","open","setOpen","useState","handleOpen","handleClose","mapStateToProps","state","mapDispatchToProps","dispatch","value","type","payload"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,SAASC,kBAAT,CAA4BC,KAA5B,EAAmC;AACjC,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAA+BF,KAArC;;AACA,QAAMG,aAAa,GAAG,MAAM;AAC1B,wBACE;AAAI,MAAA,SAAS,EAAC,2BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGF,OAAO,CAACG,GAAR,CAAY,CAACC,IAAD,EAAOC,GAAP,KAAe;AAC1B,0BACE;AAAI,QAAA,GAAG,EAAE,CAACD,IAAD,EAAOC,GAAP,CAAT;AAAsB,QAAA,SAAS,EAAC,yBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AACE,QAAA,SAAS,EAAC,wBADZ;AAEE,QAAA,OAAO,EAAE,MAAM;AACbN,UAAAA,KAAK,CAACO,cAAN,CAAqBN,OAAO,CAACK,GAAD,CAAP,CAAaE,OAAb,CAAqBC,MAA1C;AACD,SAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMGJ,IAAI,CAACK,IANR,CADF,CADF;AAYD,KAbA,CADH,CADF;AAkBD,GAnBD;;AAqBA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBf,KAAK,CAACgB,QAAN,CAAe,KAAf,CAAxB;;AAEA,QAAMC,UAAU,GAAG,MAAM;AACvBF,IAAAA,OAAO,CAAC,CAACD,IAAF,CAAP;AACD,GAFD;;AAIA,QAAMI,WAAW,GAAG,MAAM;AACxBH,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,SAAS,EAAC,sBAAlB;AAAyC,IAAA,OAAO,EAAEE,UAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,qBADH,EAEGZ,eAFH,CADF,EAKGS,IAAI,gBACH;AACE,IAAA,SAAS,EAAC,OADZ;AAEE,IAAA,IAAI,EAAEA,IAFR;AAGE,IAAA,OAAO,EAAEI,WAHX;AAIE,IAAA,OAAO,EAAEA,WAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGZ,aAAa,EANhB,CADG,GASD,IAdN,CADF;AAkBD;;AAED,SAASa,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLf,IAAAA,eAAe,EAAEe,KAAK,CAACf;AADlB,GAAP;AAGD;;AAED,SAASgB,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACLZ,IAAAA,cAAc,EAAGa,KAAD,IACdD,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAE,kBAAR;AAA4BC,MAAAA,OAAO,EAAEF;AAArC,KAAD;AAFL,GAAP;AAID;;AAED,eAAetB,OAAO,CAACkB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CnB,kBAA7C,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\n\nfunction NumStringsDropdown(props) {\n  const { options, numberOfStrings } = props;\n  const renderOptions = () => {\n    return (\n      <ul className=\"dropdown-option-container\">\n        {options.map((item, idx) => {\n          return (\n            <li key={[item, idx]} className=\"dropdown-option-wrapper\">\n              <button\n                className=\"dropdown-option-button\"\n                onClick={() => {\n                  props.setStringCount(options[idx].indices.length);\n                }}\n              >\n                {item.name}\n              </button>\n            </li>\n          );\n        })}\n      </ul>\n    );\n  };\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => {\n    setOpen(!open);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className=\"number-of-strings-dropdown\">\n      <button className=\"dropdown-open-button\" onClick={handleOpen}>\n        {\"Number of strings: \"}\n        {numberOfStrings}\n      </button>\n      {open ? (\n        <div\n          className=\"modal\"\n          open={open}\n          onClose={handleClose}\n          onClick={handleClose}\n        >\n          {renderOptions()}\n        </div>\n      ) : null}\n    </div>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    numberOfStrings: state.numberOfStrings,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setStringCount: (value) =>\n      dispatch({ type: \"SET_STRING_COUNT\", payload: value }),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NumStringsDropdown);\n"]},"metadata":{},"sourceType":"module"}