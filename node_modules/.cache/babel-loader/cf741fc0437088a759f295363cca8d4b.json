{"ast":null,"code":"var _jsxFileName = \"/Users/jake/Desktop/scalefinder-v3/src/components/Fretboard.js\";\n// renders: strings.\n// redux: options for number of strings which each render in that Standard Tuning, and a slider/input for number of frets.\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport String from \"./String\";\n\nfunction Fretboard(props) {\n  // react.useState for a value (default 24), then a slider for number of frets.\n  // strings will be dropdown menu , rendered from a const file\n  const changeNumberOfStrings = () => {\n    props.changeNumberOfStrings(4);\n  };\n\n  const changeNumberOfFrets = () => {\n    props.changeNumberOfFrets(12);\n  };\n\n  const renderGuitarStrings = () => {\n    // get tuning array for that number\n    let arr = Array(props.numberOfStrings).keys();\n    return arr.map((noteIndex, stringIndex) => {\n      return /*#__PURE__*/React.createElement(String, {\n        rootIndex: noteIndex,\n        stringIndex: stringIndex,\n        numberOfFrets: props.numberOfFrets,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 9\n        }\n      });\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: changeNumberOfStrings,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, \"test strings\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: changeNumberOfFrets,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, \"test frets\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, props.numberOfStrings.toString()), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, props.numberOfFrets.toString()), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"guitar-string-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, renderGuitarStrings()));\n}\n\nfunction mapStateToProps(state) {\n  return {\n    numberOfStrings: state.numberOfStrings,\n    numberOfFrets: state.numberOfFrets\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    changeNumberOfFrets: value => dispatch({\n      type: \"SET_FRET_COUNT\",\n      payload: value\n    }),\n    changeNumberOfStrings: value => dispatch({\n      type: \"SET_STRING_COUNT\",\n      payload: value\n    })\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Fretboard);","map":{"version":3,"sources":["/Users/jake/Desktop/scalefinder-v3/src/components/Fretboard.js"],"names":["React","connect","String","Fretboard","props","changeNumberOfStrings","changeNumberOfFrets","renderGuitarStrings","arr","Array","numberOfStrings","keys","map","noteIndex","stringIndex","numberOfFrets","toString","mapStateToProps","state","mapDispatchToProps","dispatch","value","type","payload"],"mappings":";AAAA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACxB;AACA;AAEA,QAAMC,qBAAqB,GAAG,MAAM;AAClCD,IAAAA,KAAK,CAACC,qBAAN,CAA4B,CAA5B;AACD,GAFD;;AAIA,QAAMC,mBAAmB,GAAG,MAAM;AAChCF,IAAAA,KAAK,CAACE,mBAAN,CAA0B,EAA1B;AACD,GAFD;;AAIA,QAAMC,mBAAmB,GAAG,MAAM;AAChC;AACA,QAAIC,GAAG,GAAGC,KAAK,CAACL,KAAK,CAACM,eAAP,CAAL,CAA6BC,IAA7B,EAAV;AACA,WAAOH,GAAG,CAACI,GAAJ,CAAQ,CAACC,SAAD,EAAYC,WAAZ,KAA4B;AACzC,0BACE,oBAAC,MAAD;AACE,QAAA,SAAS,EAAED,SADb;AAEE,QAAA,WAAW,EAAEC,WAFf;AAGE,QAAA,aAAa,EAAEV,KAAK,CAACW,aAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAOD,KARM,CAAP;AASD,GAZD;;AAcA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,OAAO,EAAEV,qBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAQ,IAAA,OAAO,EAAEC,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIF,KAAK,CAACM,eAAN,CAAsBM,QAAtB,EAAJ,CAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIZ,KAAK,CAACW,aAAN,CAAoBC,QAApB,EAAJ,CAJF,eAKE;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0CT,mBAAmB,EAA7D,CALF,CADF;AASD;;AAED,SAASU,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLR,IAAAA,eAAe,EAAEQ,KAAK,CAACR,eADlB;AAELK,IAAAA,aAAa,EAAEG,KAAK,CAACH;AAFhB,GAAP;AAID;;AAED,SAASI,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACLd,IAAAA,mBAAmB,EAAGe,KAAD,IACnBD,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAE,gBAAR;AAA0BC,MAAAA,OAAO,EAAEF;AAAnC,KAAD,CAFL;AAGLhB,IAAAA,qBAAqB,EAAGgB,KAAD,IACrBD,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAE,kBAAR;AAA4BC,MAAAA,OAAO,EAAEF;AAArC,KAAD;AAJL,GAAP;AAMD;;AAED,eAAepB,OAAO,CAACgB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6ChB,SAA7C,CAAf","sourcesContent":["// renders: strings.\n// redux: options for number of strings which each render in that Standard Tuning, and a slider/input for number of frets.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport String from \"./String\";\n\nfunction Fretboard(props) {\n  // react.useState for a value (default 24), then a slider for number of frets.\n  // strings will be dropdown menu , rendered from a const file\n\n  const changeNumberOfStrings = () => {\n    props.changeNumberOfStrings(4);\n  };\n\n  const changeNumberOfFrets = () => {\n    props.changeNumberOfFrets(12);\n  };\n\n  const renderGuitarStrings = () => {\n    // get tuning array for that number\n    let arr = Array(props.numberOfStrings).keys();\n    return arr.map((noteIndex, stringIndex) => {\n      return (\n        <String\n          rootIndex={noteIndex}\n          stringIndex={stringIndex}\n          numberOfFrets={props.numberOfFrets}\n        ></String>\n      );\n    });\n  };\n\n  return (\n    <div>\n      <button onClick={changeNumberOfStrings}>test strings</button>\n      <button onClick={changeNumberOfFrets}>test frets</button>\n      <p>{props.numberOfStrings.toString()}</p>\n      <p>{props.numberOfFrets.toString()}</p>\n      <div className=\"guitar-string-container\">{renderGuitarStrings()}</div>\n    </div>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    numberOfStrings: state.numberOfStrings,\n    numberOfFrets: state.numberOfFrets,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    changeNumberOfFrets: (value) =>\n      dispatch({ type: \"SET_FRET_COUNT\", payload: value }),\n    changeNumberOfStrings: (value) =>\n      dispatch({ type: \"SET_STRING_COUNT\", payload: value }),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Fretboard);\n"]},"metadata":{},"sourceType":"module"}